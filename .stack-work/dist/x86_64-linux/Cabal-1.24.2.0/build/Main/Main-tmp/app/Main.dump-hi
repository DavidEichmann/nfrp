
==================== FINAL INTERFACE ====================
2017-08-13 21:05:13.335603 UTC

interface main@main:Main 8002
  interface hash: 377f77380e1c8df07571d767ff9e0c25
  ABI hash: 93c6ec80e9f570370d665d795c6274bc
  export-list hash: 6b076bfc0b2cd56e62a1ee7b9d93d9a1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 28dfd247fb7746079e2f22e6e2fa5b84
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.compilerOpts
  Main.defaultClientPort
  Main.defaultOptions
  Main.defaultServerPort
  Main.main
  Main.options
  Main.Mode{Main.Client Main.Server}
  Main.Options{Main.Options optionsMode optionsPort}
module dependencies:
package dependencies: NFRP-0.1.0.0@NFRP-0.1.0.0-1uCZbBiWnDm26NCBMdtewu
                      base-4.9.1.0* ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  NFRP-0.1.0.0@NFRP-0.1.0.0-1uCZbBiWnDm26NCBMdtewu:Lib 775dcb6420e1c7c2c6f7180b6f73f4ab
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.IORef 71c87b0b25a8bca3e3f4497725f5e543
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:GHC.IORef 306bd532f2f3b000347cbe6316adc20e
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Console.GetOpt cc31faf101a3ac67abb428b865bee7a2
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
e19002313d7fb2919221eebd36efb8b0
  $fShowMode :: GHC.Show.Show Main.Mode
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Mode
                  Main.$fShowMode_$cshowsPrec
                  Main.$fShowMode_$cshow
                  Main.$fShowMode_$cshowList -}
e19002313d7fb2919221eebd36efb8b0
  $fShowMode1 :: Main.Mode -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Main.$fShowMode_$cshowsPrec Main.$fShowMode2) -}
d4f501ee67bcf60e0504536fa58d82be
  $fShowMode2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
91987a3448c64d9eccb0475e10b63992
  $fShowMode3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Server"#) -}
5a7ccc8a6976fea8d714154a6e3e1514
  $fShowMode4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Client "#) -}
e19002313d7fb2919221eebd36efb8b0
  $fShowMode_$cshow :: Main.Mode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Mode) ->
                 case x of wild {
                   Main.Client b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Main.$fShowMode4
                        (case b1 of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt
                                11#
                                ww3
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   Main.Server -> Main.$fShowMode3 }) -}
e19002313d7fb2919221eebd36efb8b0
  $fShowMode_$cshowList :: [Main.Mode] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Mode Main.$fShowMode1) -}
e19002313d7fb2919221eebd36efb8b0
  $fShowMode_$cshowsPrec ::
    GHC.Types.Int -> Main.Mode -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Main.Mode)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Main.Client b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Main.$fShowMode4
                             (case b1 of ww2 { GHC.Types.I# ww3 ->
                              case GHC.Show.$wshowSignedInt 11# ww3 eta of ww4 { (#,#) ww5 ww6 ->
                              GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Main.$fShowMode4
                                (case b1 of ww2 { GHC.Types.I# ww3 ->
                                 case GHC.Show.$wshowSignedInt
                                        11#
                                        ww3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows4
                                           eta) of ww4 { (#,#) ww5 ww6 ->
                                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) } }
                   Main.Server
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode3 eta }) -}
e62d791731323355b04c005ddd44e49e
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14317905627767584460##
                   8020356174247805466##
                   Main.$trModule
                   Main.$tc'Client1) -}
1e31cdcbef3d5a45efde6decabdcaefc
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
22c08b7feb60ed7fee3edc9f60f0c6c9
  $tc'Options :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12053337813027498352##
                   16687430618492430967##
                   Main.$trModule
                   Main.$tc'Options1) -}
9cae58cbe3df5dbea147a3ed7d6e2999
  $tc'Options1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Options"#) -}
e2e47e4b095050486d76025efbb9eb8d
  $tc'Server :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17147978485207381799##
                   15204794003762209136##
                   Main.$trModule
                   Main.$tc'Server1) -}
0a4a60082ab2028484dd711c5f968b45
  $tc'Server1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Server"#) -}
669e7d704f3096b5b89aa9b8fbea883f
  $tcMode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8845561417264172635##
                   11635813986722628468##
                   Main.$trModule
                   Main.$tcMode1) -}
c99310931e721a4c6a28c98360c8c078
  $tcMode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mode"#) -}
abd603e4fa0fb36a62f46c64ba42a773
  $tcOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12007406591012137468##
                   10089152995905404403##
                   Main.$trModule
                   Main.$tcOptions1) -}
c273aba89b8392f117363d7c88d26f3c
  $tcOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Options"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
57a578b1147af97296dfe27572dd7769
  $wgo ::
    [Main.Options -> Main.Options]
    -> Main.Mode -> GHC.Types.Int -> (# Main.Mode, GHC.Types.Int #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U>,
     Inline: [0] -}
e19002313d7fb2919221eebd36efb8b0
  data Mode = Client GHC.Types.Int | Server
c3c75062b7b388a5779d50d256720190
  data Options
    = Options {optionsMode :: Main.Mode, optionsPort :: GHC.Types.Int}
ea288b7ee6274692ece2304e0c384edb
  compilerOpts ::
    [GHC.Base.String] -> GHC.Types.IO (Main.Options, [GHC.Base.String])
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.compilerOpts1
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Main.Options, [GHC.Base.String])>_R)) -}
a193d37e0d5d76cf724db4949ff363aa
  compilerOpts1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Main.Options, [GHC.Base.String]) #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (argv :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Console.GetOpt.$wgetOpt'
                        @ (Main.Options -> Main.Options)
                        (System.Console.GetOpt.Permute @ (Main.Options -> Main.Options))
                        Main.options
                        argv of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 case GHC.Base.++
                        @ [GHC.Types.Char]
                        ww4
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ [GHC.Types.Char]
                           System.Console.GetOpt.errUnrec
                           ww3) of wild {
                   []
                   -> (# eta,
                         (case Main.$wgo
                                 ww1
                                 Main.compilerOpts2
                                 Main.defaultClientPort of ww7 { (#,#) ww8 ww9 ->
                          Main.Options ww8 ww9 },
                          ww2) #)
                   : ipv ipv1
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ (Main.Options, [GHC.Base.String])
                        (GHC.IO.Exception.$fExceptionIOException_$ctoException
                           (GHC.IO.Exception.IOError
                              (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                              GHC.IO.Exception.UserError
                              (GHC.Types.[] @ GHC.Types.Char)
                              (Main.compilerOpts_go wild)
                              (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                              (GHC.Base.Nothing @ GHC.IO.FilePath)))
                        eta } }) -}
feaf5bba434b928be7cbc1cb6e688753
  compilerOpts2 :: Main.Mode
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Main.Client Main.defaultServerPort) -}
d02f4a7688991990d7f68839105caca6
  compilerOpts_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
22fb7b196fcb2d282b25b36eb942fb67
  defaultClientPort :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10001#) -}
9f2266ef06999fb6208de8652e6930b9
  defaultOptions :: Main.Options
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Main.Options
                   Main.compilerOpts2
                   Main.defaultClientPort) -}
3559c4b1a73479766aa202cd9bbed86d
  defaultServerPort :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10000#) -}
5be5e7cf5f51a5d7f64ce91c4c844ab4
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7400f602366dae88ac17ab29c2e57b32
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case Main.compilerOpts1 ipv1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) opts ds ->
                 case ds of wild1 {
                   []
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Main.main7
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Main.main6
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      Lib.localActuate1
                        @ GHC.Base.String
                        (Lib.Lift2
                           @ [GHC.Types.Char]
                           @ GHC.Types.Int
                           @ GHC.Types.Int
                           Main.main5
                           (Lib.Poll
                              @ GHC.Types.Int
                              (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               GHC.Prim.readMutVar# @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5 eta)
                                `cast`
                              (Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)))
                           (Lib.Poll
                              @ GHC.Types.Int
                              (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               GHC.Prim.readMutVar# @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7 eta)
                                `cast`
                              (Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R))))
                        (\ (out :: GHC.Base.String)
                           (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv5
                                eta of ds5 { (#,#) ipv8 ipv9 ->
                         case GHC.Prim.writeMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv5
                                (case ipv9 of wild2 { GHC.Types.I# x ->
                                 GHC.Types.I# (GHC.Prim.+# x 1#) })
                                ipv8 of s2# { DEFAULT ->
                         GHC.IO.Handle.Text.hPutStr2
                           GHC.IO.Handle.FD.stdout
                           out
                           GHC.Types.True
                           s2# } })
                          `cast`
                        (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv6 } }
                   : ipv4 ipv5
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        Main.main2
                        ipv2 } } } }) -}
b0c70109b62dfebfbec21e2f3e2a38d7
  main2 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   Main.main3) -}
1b6a84b370a53e53114733f5d4d9dc5b
  main3 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main4
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
414beeae2e2a43976eaea6e6cdc863c1
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Main.hs:22:3-12"#) -}
34b352ecb230f0a944dbc7ac4435f761
  main5 :: GHC.Types.Int -> GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (a :: GHC.Types.Int) (b :: GHC.Types.Int) ->
                 case a of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                   (GHC.CString.unpackAppendCString#
                      " + "#
                      (case b of ww1 { GHC.Types.I# ww8 ->
                       case GHC.Show.$wshowSignedInt
                              0#
                              ww8
                              (GHC.Types.[] @ GHC.Types.Char) of ww9 { (#,#) ww10 ww11 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.: @ GHC.Types.Char ww10 ww11)
                         (GHC.CString.unpackAppendCString#
                            " = "#
                            (case GHC.Show.$wshowSignedInt
                                    0#
                                    (GHC.Prim.+# ww3 ww8)
                                    (GHC.Types.[] @ GHC.Types.Char) of ww12 { (#,#) ww13 ww14 ->
                             GHC.Types.: @ GHC.Types.Char ww13 ww14 })) } })) } }) -}
6301705a4b3cdfbb08465939fb6ba590
  main6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
bb8cf39a58d9b1cc22823a9fb8766fd5
  main7 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10#) -}
807b789916b8c03d296dcad8b0d37914
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
54c48563ff7e5714436ca851daf21326
  options ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options21
                   Main.options1) -}
e5951ae2ac8e2e6ec532b0026091f5cd
  options1 ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options13
                   Main.options2) -}
64d118e04a2e5f3b8d490f4d1c6b4302
  options10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options4
                   (GHC.Types.[] @ GHC.Base.String)) -}
7ff4ca71b650cf22932a77078836c3bb
  options11 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options12
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bd82ca64d687c1fc9865bed998edc04a
  options12 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'p'#) -}
9fcb7bcf1cde8e9a13854dc64b92feed
  options13 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options19
                   Main.options17
                   Main.options15
                   Main.options14) -}
ff11086cacd3ed639b9cbd696340b0fd
  options14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Server mode"#) -}
349d9b44b29b20c4a408b6d0a6d20ff6
  options15 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Main.Options -> Main.Options)
                   Main.options16) -}
df21c034cbbbd0f0ffb66575d28370d3
  options16 :: Main.Options -> Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Main.Options) ->
                 case opts of wild { Main.Options ds ds1 ->
                 Main.Options Main.Server ds1 }) -}
86478c65002c396c0155a83489eb4dba
  options17 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options18
                   (GHC.Types.[] @ GHC.Base.String)) -}
4d7b533fd52155cd7de19d44fea8ae21
  options18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "server"#) -}
ba327000e12c807d5322bce34c8861cb
  options19 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options20
                   (GHC.Types.[] @ GHC.Types.Char)) -}
21273eaf9243aa1c44d84b75e0783b6f
  options2 ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options3
                   (GHC.Types.[]
                      @ (System.Console.GetOpt.OptDescr
                           (Main.Options -> Main.Options)))) -}
78c848148000270a9aa620387afdf565
  options20 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 's'#) -}
610b9f370fdbf5232d6cc03278a74c31
  options21 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options28
                   Main.options26
                   Main.options23
                   Main.options22) -}
5ff5f0f5e69410b006292950e83ddf2f
  options22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Client mode"#) -}
40a02bcd0e88acc15c6fd9293b191e42
  options23 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- Strictness: m3,
     Unfolding: (System.Console.GetOpt.OptArg
                   @ (Main.Options -> Main.Options)
                   Main.options25
                   Main.options24) -}
4a1204f9358b38df21a1fcc60cc88253
  options24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Server port"#) -}
55745880b47b54c059a361919f3f1798
  options25 ::
    GHC.Base.Maybe GHC.Base.String -> Main.Options -> Main.Options
  {- Arity: 2, Strictness: <L,1*U><S,1*U(A,U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.Maybe GHC.Base.String) (w1 :: Main.Options) ->
                 case w1 of ww { Main.Options ww1 ww2 ->
                 Main.Options
                   (Main.Client
                      (case w of wild {
                         GHC.Base.Nothing -> Main.defaultServerPort
                         GHC.Base.Just x
                         -> case Text.Read.readEither6
                                   @ GHC.Types.Int
                                   (Text.ParserCombinators.ReadP.run
                                      @ GHC.Types.Int
                                      Main.options9
                                      x) of wild1 {
                              [] -> Main.options8
                              : x1 ds
                              -> case ds of wild2 { [] -> x1 : ipv ipv1 -> Main.options7 } } }))
                   ww2 }) -}
416479cf47e215eab5cb81768c2bff6b
  options26 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options27
                   (GHC.Types.[] @ GHC.Base.String)) -}
13a08e2814eb901356f2018e0b1dccbe
  options27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "client"#) -}
aa056ac41742d2a2f6f46a1b2b0544a2
  options28 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options29
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5ac7dbe2151fbe03fa8fe327ad664d38
  options29 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'c'#) -}
71a1067dc9a182d0d4af3f75783ce983
  options3 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options11
                   Main.options10
                   Main.options5
                   Main.options4) -}
fc78dd7db86113b8c5fe629fc712ba40
  options4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "port"#) -}
ba4a552d387256b26106aa7d21e5df7f
  options5 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Main.Options -> Main.Options)
                   Main.options6
                   Main.options4) -}
bdcbba420ed36900de959a74b27c6726
  options6 :: GHC.Base.String -> Main.Options -> Main.Options
  {- Arity: 2, Strictness: <L,U><S,1*U(U,A)>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: Main.Options) ->
                 case w1 of ww { Main.Options ww1 ww2 ->
                 Main.Options
                   ww1
                   (case Text.Read.readEither6
                           @ GHC.Types.Int
                           (Text.ParserCombinators.ReadP.run
                              @ GHC.Types.Int
                              Main.options9
                              w) of wild {
                      [] -> Main.options8
                      : x ds
                      -> case ds of wild1 {
                           [] -> x : ipv ipv1 -> Main.options7 } }) }) -}
ceba587a546b478cb550033d92fee547
  options7 :: GHC.Types.Int
  {- Strictness: x -}
16cd05128716982bff866d1f0e673963
  options8 :: GHC.Types.Int
  {- Strictness: x -}
5bae87158d6b97821cf7f33abbf15e1c
  options9 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt3
                   GHC.Read.$fReadInt_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
633c9b4bd28d9225d7701d588e762065
  optionsMode :: Main.Options -> Main.Mode
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 -> ds1 }) -}
68cafd001d315ca0ac2667fe7bbf657d
  optionsPort :: Main.Options -> GHC.Types.Int
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 -> ds2 }) -}
instance [safe] GHC.Show.Show [Main.Mode] = Main.$fShowMode
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

